[{"/Users/mateuszmotyl/Projects/studia/twij-front/src/index.tsx":"1","/Users/mateuszmotyl/Projects/studia/twij-front/src/store/index.ts":"2","/Users/mateuszmotyl/Projects/studia/twij-front/src/sagas/index.ts":"3","/Users/mateuszmotyl/Projects/studia/twij-front/src/components/AddElementButton/AddElementButton.tsx":"4","/Users/mateuszmotyl/Projects/studia/twij-front/src/components/Modal/Modal.tsx":"5","/Users/mateuszmotyl/Projects/studia/twij-front/src/components/Accordion/Accordion.tsx":"6","/Users/mateuszmotyl/Projects/studia/twij-front/src/components/QuestionInput/QuestionHeaderInput/QuestionHeaderInput.tsx":"7","/Users/mateuszmotyl/Projects/studia/twij-front/src/components/QuestionInput/QuestionAnswersInput/QuestionAnswersInput.tsx":"8","/Users/mateuszmotyl/Projects/studia/twij-front/src/store/quizSettings.ts":"9","/Users/mateuszmotyl/Projects/studia/twij-front/src/sagas/quizSettings.ts":"10","/Users/mateuszmotyl/Projects/studia/twij-front/src/components/AddElementButton/Button.tsx":"11","/Users/mateuszmotyl/Projects/studia/twij-front/src/store/quizSchedule.ts":"12","/Users/mateuszmotyl/Projects/studia/twij-front/src/components/Inputs/NumberInput/NumberInput.tsx":"13","/Users/mateuszmotyl/Projects/studia/twij-front/src/components/Inputs/TextInput/TextInput.tsx":"14","/Users/mateuszmotyl/Projects/studia/twij-front/src/components/Inputs/FormItems/DateTimeInput/DateTimeInput.tsx":"15","/Users/mateuszmotyl/Projects/studia/twij-front/src/components/Inputs/SelectUnitInput/SelectUnitInput.tsx":"16","/Users/mateuszmotyl/Projects/studia/twij-front/src/sagas/quizSchedule.ts":"17","/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/AdminPage/AdminPage.tsx":"18","/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/AdminPage/Routes/Routes.tsx":"19","/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/AdminPage/Quizes/Quizzes.tsx":"20","/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/AdminPage/Dashboard/Dashboard.tsx":"21","/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/AdminPage/Routes/PrivateRoute/PrivateRoute.tsx":"22","/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/AdminPage/Quizes/QuizList/QuizList.tsx":"23","/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/AdminPage/Quizes/ScheduleQuizModal/ScheduleQuizModal.tsx":"24","/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/AdminPage/Quizes/AddNewQuiz/AddNewQuiz.tsx":"25","/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/AdminPage/Quizes/QuizList/QuizListItem/QuizListItem.tsx":"26","/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/AdminPage/Quizes/ScheduleQuizModal/QuestionsSelectInput/QuestionsSelectInput.tsx":"27","/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/AdminPage/Quizes/ScheduleQuizModal/EmailsInput/EmailsInput.tsx":"28","/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/AdminPage/Quizes/ScheduleQuizModal/ScheduleQuizHeader/ScheduleQuizHeader.tsx":"29","/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/AdminPage/Quizes/QuizSettingsModal/QuizSettingsModal.tsx":"30","/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/AdminPage/Quizes/AddNewQuiz/AddNewQuizButton/CreateQuizButton.tsx":"31","/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/AdminPage/Quizes/QuizSettingsModal/QuestionsInputList/QuestionsInputList.tsx":"32","/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/AdminPage/Components/AppBar/AppBar.tsx":"33","/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/AdminPage/Components/MenuNav/MenuNav.tsx":"34","/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/App.tsx":"35","/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/Game/Game.tsx":"36","/Users/mateuszmotyl/Projects/studia/twij-front/src/store/game.ts":"37","/Users/mateuszmotyl/Projects/studia/twij-front/src/sagas/game.ts":"38","/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/Game/Components/Page/Page.tsx":"39","/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/SpinnerOverlay/SpinnerOverlay.tsx":"40","/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/Game/TheGame/FoundedQuizStatusHandler.tsx":"41","/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/Game/TheGame/PendingGame/PendingGame.tsx":"42","/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/Game/TheGame/AwaitingGame/AwaitingGame.tsx":"43","/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/Game/TheGame/DidntStartGame/DidntStartGame.tsx":"44","/Users/mateuszmotyl/Projects/studia/twij-front/src/components/Card/Card.tsx":"45","/Users/mateuszmotyl/Projects/studia/twij-front/src/sagas/quizHistory.ts":"46","/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/AdminPage/QuizHistory/QuizHistory.tsx":"47","/Users/mateuszmotyl/Projects/studia/twij-front/src/store/quizHistory.ts":"48","/Users/mateuszmotyl/Projects/studia/twij-front/src/components/Table/Table.tsx":"49"},{"size":831,"mtime":1613231693909,"results":"50","hashOfConfig":"51"},{"size":718,"mtime":1613398827252,"results":"52","hashOfConfig":"51"},{"size":340,"mtime":1613397458021,"results":"53","hashOfConfig":"51"},{"size":572,"mtime":1611355777017,"results":"54","hashOfConfig":"51"},{"size":2508,"mtime":1613234085671,"results":"55","hashOfConfig":"51"},{"size":1371,"mtime":1612823582938,"results":"56","hashOfConfig":"51"},{"size":1076,"mtime":1612824185526,"results":"57","hashOfConfig":"51"},{"size":3852,"mtime":1612990802996,"results":"58","hashOfConfig":"51"},{"size":4030,"mtime":1613220068793,"results":"59","hashOfConfig":"51"},{"size":1455,"mtime":1613122747125,"results":"60","hashOfConfig":"51"},{"size":567,"mtime":1612610243841,"results":"61","hashOfConfig":"51"},{"size":3290,"mtime":1613392734390,"results":"62","hashOfConfig":"51"},{"size":1041,"mtime":1612995078808,"results":"63","hashOfConfig":"51"},{"size":1257,"mtime":1613002677144,"results":"64","hashOfConfig":"51"},{"size":2824,"mtime":1612989138318,"results":"65","hashOfConfig":"51"},{"size":854,"mtime":1612994052436,"results":"66","hashOfConfig":"51"},{"size":1229,"mtime":1613224351931,"results":"67","hashOfConfig":"51"},{"size":675,"mtime":1613230479814,"results":"68","hashOfConfig":"51"},{"size":846,"mtime":1613397815631,"results":"69","hashOfConfig":"51"},{"size":217,"mtime":1613230170888,"results":"70","hashOfConfig":"51"},{"size":1448,"mtime":1613406679368,"results":"71","hashOfConfig":"51"},{"size":544,"mtime":1611339127685,"results":"72","hashOfConfig":"51"},{"size":1079,"mtime":1613230170866,"results":"73","hashOfConfig":"51"},{"size":6184,"mtime":1613230170874,"results":"74","hashOfConfig":"51"},{"size":1089,"mtime":1613318349933,"results":"75","hashOfConfig":"51"},{"size":2370,"mtime":1612914087317,"results":"76","hashOfConfig":"51"},{"size":5298,"mtime":1613318523835,"results":"77","hashOfConfig":"51"},{"size":2121,"mtime":1613146479031,"results":"78","hashOfConfig":"51"},{"size":438,"mtime":1612974714241,"results":"79","hashOfConfig":"51"},{"size":2362,"mtime":1613230170859,"results":"80","hashOfConfig":"51"},{"size":561,"mtime":1611358641762,"results":"81","hashOfConfig":"51"},{"size":2100,"mtime":1612824080333,"results":"82","hashOfConfig":"51"},{"size":592,"mtime":1613411526478,"results":"83","hashOfConfig":"51"},{"size":2033,"mtime":1613400666330,"results":"84","hashOfConfig":"51"},{"size":599,"mtime":1613234730879,"results":"85","hashOfConfig":"51"},{"size":1289,"mtime":1613404433211,"results":"86","hashOfConfig":"51"},{"size":3591,"mtime":1613320270787,"results":"87","hashOfConfig":"51"},{"size":1809,"mtime":1613315112068,"results":"88","hashOfConfig":"51"},{"size":351,"mtime":1613233005913,"results":"89","hashOfConfig":"51"},{"size":396,"mtime":1613234278163,"results":"90","hashOfConfig":"51"},{"size":1563,"mtime":1613404445518,"results":"91","hashOfConfig":"51"},{"size":2105,"mtime":1613394986476,"results":"92","hashOfConfig":"51"},{"size":987,"mtime":1613404461003,"results":"93","hashOfConfig":"51"},{"size":570,"mtime":1613404407297,"results":"94","hashOfConfig":"51"},{"size":514,"mtime":1613406558231,"results":"95","hashOfConfig":"51"},{"size":458,"mtime":1613398933384,"results":"96","hashOfConfig":"51"},{"size":1644,"mtime":1613411003477,"results":"97","hashOfConfig":"51"},{"size":1196,"mtime":1613410871453,"results":"98","hashOfConfig":"51"},{"size":4143,"mtime":1613411095382,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"i37gug",{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"102"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"102"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"102"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"102"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"102"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"102"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"102"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"102"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/mateuszmotyl/Projects/studia/twij-front/src/index.tsx",[],["207","208"],"/Users/mateuszmotyl/Projects/studia/twij-front/src/store/index.ts",[],"/Users/mateuszmotyl/Projects/studia/twij-front/src/sagas/index.ts",[],"/Users/mateuszmotyl/Projects/studia/twij-front/src/components/AddElementButton/AddElementButton.tsx",[],"/Users/mateuszmotyl/Projects/studia/twij-front/src/components/Modal/Modal.tsx",["209"],"import React, {ReactNode, useEffect, useState} from 'react';\nimport {\n  Card as CardMt,\n  Button as ButtonMt,\n  Divider as DividerMt,\n  Fade as FadeMt,\n  Modal as ModalMt,\n} from \"@material-ui/core\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport styles from \"@components/Modal/Modal.module.scss\";\n\nexport type onSubmitCallback = () => void;\nexport type onCancelCallback = () => void;\n\nexport interface ModalProps {\n  isModalOpen: boolean;\n  title: string | JSX.Element;\n  description: string;\n  onSubmit: onSubmitCallback;\n  onCancel: onCancelCallback;\n  children: ReactNode;\n  loading?: boolean;\n}\n\nconst Modal = ({ isModalOpen, title, description, children, onCancel, onSubmit, loading = false }: ModalProps): JSX.Element => {\n  const [isModalLoading, setIsModalLoading] = useState<boolean>(loading);\n\n  useEffect(() => {\n    if (isModalLoading === loading) {\n      return;\n    }\n    if (loading) {\n      setIsModalLoading(true);\n      return;\n    }\n    const timeout = setTimeout(() => {\n      if (!loading) {\n        setIsModalLoading(false);\n      }\n    }, 500);\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [loading]);\n\n  return <ModalMt\n    aria-labelledby={title.toString()}\n    aria-describedby={description}\n    open={isModalOpen}\n    closeAfterTransition\n    className={styles.modal}\n    BackdropProps={{\n      timeout: 500,\n    }}\n  >\n    <>\n      {isModalLoading\n        ? <div className={styles.spinnerOverlay}>\n            <CircularProgress color=\"inherit\" />\n          </div>\n        : <FadeMt timeout={300} in={isModalOpen}>\n            <CardMt className={styles.modalCard}>\n              <header className={styles.modalCardHeader}>\n                {typeof title === \"string\"\n                    ? <h2 className={styles.modalCardTitle}>{title}</h2>\n                    : title\n                }\n                <DividerMt />\n              </header>\n              <main className={styles.modalCardMain}>\n                {children}\n              </main>\n              <footer className={styles.modalCardFooter}>\n                <DividerMt />\n                <div className={styles.footerActions}>\n                  <ButtonMt size=\"small\" onClick={onCancel}>Anuluj</ButtonMt>\n                  <ButtonMt size=\"small\"  onClick={onSubmit} color=\"primary\">\n                    Zatwierdź\n                  </ButtonMt>\n                </div>\n              </footer>\n            </CardMt>\n          </FadeMt>}\n    </>\n  </ModalMt>\n}\n\nexport default Modal;","/Users/mateuszmotyl/Projects/studia/twij-front/src/components/Accordion/Accordion.tsx",[],"/Users/mateuszmotyl/Projects/studia/twij-front/src/components/QuestionInput/QuestionHeaderInput/QuestionHeaderInput.tsx",[],"/Users/mateuszmotyl/Projects/studia/twij-front/src/components/QuestionInput/QuestionAnswersInput/QuestionAnswersInput.tsx",["210"],"import React, {useEffect, useState} from 'react';\nimport {FormControlLabel, InputAdornment, Radio, RadioGroup, Slider} from \"@material-ui/core\";\nimport TextInput from \"@components/FormItems/TextInput/TextInput\";\n\nimport styles from './QuestionAnswersInput.module.scss';\n\nexport interface QuestionProps {\n  question: string;\n  answerA: string;\n  answerB: string;\n  answerC: string;\n  answerD: string;\n  answer: number;\n  points: number;\n}\n\nexport interface QuestionInputProps {\n  onChange?: (newQuestion: QuestionProps) => void;\n  questionProps: QuestionProps;\n  uniqueId?: number;\n}\n\nconst QuestionAnswersInput = ({ onChange, questionProps, uniqueId }: QuestionInputProps): JSX.Element => {\n  const [quizItem, setQuizItem] = useState<QuestionProps>(questionProps);\n  const id = uniqueId ? uniqueId.toString() : '';\n  useEffect(() => {\n    if (!onChange) {\n      return;\n    }\n    onChange(quizItem);\n  }, [quizItem]);\n\n  const answersArray = [quizItem.answerA, quizItem.answerB, quizItem.answerC, quizItem.answerD];\n  const answersLabels = ['A', 'B', 'C', 'D'];\n\n  const handleQuestionChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuizItem({\n      ...quizItem,\n      question: event.target.value\n    });\n  }\n\n  const handleProperAnswerChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuizItem({\n      ...quizItem,\n      answer: Number(event.target.value)\n    });\n  }\n\n  const handleAnswerChange = (event: React.ChangeEvent<HTMLInputElement>, answer: string) => {\n    if (!quizItem.hasOwnProperty(answer)) {\n      return;\n    }\n    setQuizItem({\n      ...quizItem,\n      [answer]: event.target.value\n    });\n  }\n\n  const handlePointsChange = (_: any, value: (number | number[])) => {\n    if (typeof value !== 'number') {\n      return;\n    }\n    setQuizItem({\n      ...quizItem,\n      points: value\n    });\n  }\n\n  return (\n    <div className={styles.questionInputContainer}>\n      <TextInput\n        className={styles.question}\n        value={quizItem.question}\n        onChange={handleQuestionChange}\n        id={`${id}-name`}\n        label={'Question'}\n        variant={'outlined'}\n        multiline={true}\n        rowsMax={4}\n        rows={3}\n      />\n      <RadioGroup aria-label='quiz' name='quiz' value={quizItem.answer} onChange={handleProperAnswerChange} className={styles.answers}>\n        {\n          answersArray.map((answer, index) => {\n            const prop = `answer${answersLabels[index]}`;\n            const answerInput = (\n              <TextInput\n                value={answer}\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => handleAnswerChange(event, prop)}\n                id={`${id}-slider-${index}`}\n                className={styles.questionInput}\n                inputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      {answersLabels[index]}\n                    </InputAdornment>\n                  )\n                }}\n              />\n            )\n            return (\n              <FormControlLabel\n                id={`${id}-radio-${index}`}\n                className={styles.answerOption}\n                value={index}\n                control={<Radio />}\n                label={answerInput}\n              />\n            )\n          })\n        }\n      </RadioGroup>\n      <div>\n        <p>Liczba punktów za poprawną odpowiedź:</p>\n        <Slider\n          id={`${id}-slider`}\n          value={quizItem.points}\n          onChange={handlePointsChange}\n          defaultValue={1}\n          aria-labelledby=\"discrete-slider\"\n          valueLabelDisplay=\"auto\"\n          style={{\n            width: 200,\n            marginLeft: 20\n          }}\n          step={1}\n          marks\n          min={0}\n          max={10}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default QuestionAnswersInput;\n","/Users/mateuszmotyl/Projects/studia/twij-front/src/store/quizSettings.ts",[],"/Users/mateuszmotyl/Projects/studia/twij-front/src/sagas/quizSettings.ts",[],"/Users/mateuszmotyl/Projects/studia/twij-front/src/components/AddElementButton/Button.tsx",[],"/Users/mateuszmotyl/Projects/studia/twij-front/src/store/quizSchedule.ts",[],"/Users/mateuszmotyl/Projects/studia/twij-front/src/components/Inputs/NumberInput/NumberInput.tsx",[],"/Users/mateuszmotyl/Projects/studia/twij-front/src/components/Inputs/TextInput/TextInput.tsx",[],"/Users/mateuszmotyl/Projects/studia/twij-front/src/components/Inputs/FormItems/DateTimeInput/DateTimeInput.tsx",[],"/Users/mateuszmotyl/Projects/studia/twij-front/src/components/Inputs/SelectUnitInput/SelectUnitInput.tsx",[],"/Users/mateuszmotyl/Projects/studia/twij-front/src/sagas/quizSchedule.ts",[],"/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/AdminPage/AdminPage.tsx",[],"/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/AdminPage/Routes/Routes.tsx",[],"/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/AdminPage/Quizes/Quizzes.tsx",[],"/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/AdminPage/Dashboard/Dashboard.tsx",[],"/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/AdminPage/Routes/PrivateRoute/PrivateRoute.tsx",[],"/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/AdminPage/Quizes/QuizList/QuizList.tsx",["211"],"import React, {useEffect} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {actions, selectors} from \"@store/quizSettings\";\nimport { Paper as PaperMt } from \"@material-ui/core\";\nimport QuizListItem from \"@domain/AdminPage/Quizes/QuizList/QuizListItem/QuizListItem\";\nimport AddNewQuiz from \"@domain/AdminPage/Quizes/AddNewQuiz/AddNewQuiz\";\nimport ScheduleQuizModal from \"@domain/AdminPage/Quizes/ScheduleQuizModal/ScheduleQuizModal\";\n\nimport styles from './QuizList.module.scss';\n\nconst QuizList = (): JSX.Element => {\n  const dispatch = useDispatch();\n  const quizzes = useSelector(selectors.quizzes);\n\n  useEffect(() => {\n    dispatch(actions.fetchQuizzes());\n  }, [dispatch, actions]);\n\n  return (\n    <div className={styles.quizList}>\n      <AddNewQuiz />\n      <ScheduleQuizModal />\n      {quizzes.map((quiz, index) => (\n        <div className={styles.quizListItem} key={quiz.id}>\n          <PaperMt elevation={index}>\n            <QuizListItem {...quiz} />\n          </PaperMt>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default QuizList;\n","/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/AdminPage/Quizes/ScheduleQuizModal/ScheduleQuizModal.tsx",["212"],"import React, {ChangeEvent, useState} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport ScheduleQuizHeader from \"@domain/AdminPage/Quizes/ScheduleQuizModal/ScheduleQuizHeader/ScheduleQuizHeader\";\nimport {actions, selectors, timeToStartUnitsEnum} from '@store/quizSchedule';\nimport {selectors as quizSettingsSelectors} from '@store/quizSettings';\nimport DateTimeInput from \"@components/Inputs/FormItems/DateTimeInput/DateTimeInput\";\nimport Modal from '@components/Modal/Modal';\n\nimport styles from './ScheduleQuizModal.module.scss';\nimport NumberInput from \"@components/Inputs/NumberInput/NumberInput\";\nimport SelectUnitInput, {OptionProps} from \"@components/Inputs/SelectUnitInput/SelectUnitInput\";\nimport QuestionsSelectInput from \"@domain/AdminPage/Quizes/ScheduleQuizModal/QuestionsSelectInput/QuestionsSelectInput\";\nimport TextInput from \"@components/Inputs/TextInput/TextInput\";\nimport EmailsInput from \"@domain/AdminPage/Quizes/ScheduleQuizModal/EmailsInput/EmailsInput\";\n\nconst timeToStartUnitsObj:  OptionProps[] = [\n  {\n    label: 'Minut',\n    value: timeToStartUnitsEnum.minutes,\n  },\n  {\n    label: 'Godzin',\n    value: timeToStartUnitsEnum.hours,\n  },\n  {\n    label: 'Dni',\n    value: timeToStartUnitsEnum.days,\n  }\n]\n\nconst ScheduleQuizModal = ():JSX.Element => {\n\n  const dispatch = useDispatch();\n  const isModalVisible = useSelector(selectors.modalVisibility);\n  const currentQuiz = useSelector(quizSettingsSelectors.currentQuiz);\n  const isCurrentQuizBeingFetch = useSelector(quizSettingsSelectors.isCurrentQuizBeingFetch);\n  const startTime = useSelector(selectors.startTime);\n  const timeToStart = useSelector(selectors.timeToStart);\n  const timeToStartUnit = useSelector(selectors.timeToStartUnit);\n  const testDurationInMinutes = useSelector(selectors.testDurationInMinutes);\n  const questionsIds = useSelector(selectors.questionsIds);\n  const emailMessage = useSelector(selectors.emailMessage);\n  const emails = useSelector(selectors.emails);\n  //losowe pytania -> ilość pytan\n\n  const onStartTimeUpdateHandle = (date: Date | null) => {\n    if (!date) {\n      return;\n    }\n    dispatch(actions.updateStartTime(date.toISOString()));\n  }\n\n  const onTimeToStartUpdateHandle = (event: ChangeEvent<{ name?: string | undefined; value: unknown; }>) => {\n    const newValue = event.target.value;\n    if (typeof newValue !== \"number\") {\n      return;\n    }\n    dispatch(actions.updateTimeToStart(newValue));\n  }\n\n  const onTimeToStartUnitUpdateHandle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = Number(event.target.value)\n    dispatch(actions.updateTimeToStartUnit(newValue));\n  }\n\n  const onTestDurationInMinutesUpdateHandle = (event: ChangeEvent<{ name?: string | undefined; value: unknown; }>) => {\n    const newValue = event.target.value;\n    if (typeof newValue !== \"number\") {\n      return;\n    }\n    dispatch(actions.updateTestDurationInMinutes(newValue));\n  }\n\n  const onQuestionsIdsUpdateHandle = (questionsIds: string[]) => {\n    dispatch(actions.updateQuestionsIds(questionsIds));\n  }\n\n  const onEmailMessageUpdateHandle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(actions.updateEmailMessage(event.target.value));\n  }\n\n  const onEmailsUpdateHandle = (emails: string[]) => {\n    dispatch(actions.updateEmails(emails));\n  }\n\n  const onCancel = () => {\n    dispatch(actions.onModalScheduleClose());\n  }\n\n  const onSubmit = () => {\n    dispatch(actions.onScheduleQuizSubmit());\n  }\n\n  return (\n    <Modal\n      isModalOpen={isModalVisible}\n      title={<ScheduleQuizHeader name={currentQuiz.name} subject={currentQuiz.subject} />}\n      description={'Zaplanuj quiz'}\n      loading={isCurrentQuizBeingFetch}\n      onSubmit={onSubmit}\n      onCancel={onCancel}\n    >\n      <div className={styles.formRoot}>\n        <div>\n          <DateTimeInput\n            label=\"Wprowadź czas rozpoczęcia Quizu\"\n            startsInNote=\"Quiz zaplanowany na za \"\n            dateISOString={startTime}\n            onDateChange={onStartTimeUpdateHandle}\n          />\n        </div>\n        <div>\n          <p className={styles.inputRowHeader}>Czas przez który będzie można rozpocząć Quiz</p>\n          <div className={styles.inputRow}>\n            <NumberInput\n              id={'start_duration'}\n              min={1}\n              max={60}\n              value={timeToStart}\n              onChange={onTimeToStartUpdateHandle}\n            />\n            <SelectUnitInput\n              id={'start_duration_unit'}\n              onChange={onTimeToStartUnitUpdateHandle}\n              options={timeToStartUnitsObj}\n              value={timeToStartUnit}\n            />\n          </div>\n        </div>\n        <div>\n          <p className={styles.inputRowHeader}>Czas na udzielanie odpowiedzi</p>\n          <div className={styles.inputRow}>\n            <NumberInput\n              id={'quiz_duration'}\n              min={5}\n              max={120}\n              value={testDurationInMinutes}\n              onChange={onTestDurationInMinutesUpdateHandle}\n            />\n            <p className={styles.unit}>\n              Minut\n            </p>\n          </div>\n        </div>\n        <div>\n          <p className={styles.inputRowHeader}>Wybierz pytania biorące udział w Quizie:</p>\n          <QuestionsSelectInput\n            // @ts-ignore\n            questions={currentQuiz.questions.filter(quest => !!quest.id)}\n            selectedIds={questionsIds}\n            onUpdate={onQuestionsIdsUpdateHandle}\n          />\n        </div>\n        <div>\n          <p className={styles.inputRowHeader}>Skonfiguruj adresy email biorące udział w Quizie:</p>\n          <EmailsInput\n            value={emails}\n            onChange={onEmailsUpdateHandle}\n          />\n        </div>\n        <div>\n          <p className={styles.inputRowHeader}>Wiadomość email:</p>\n          <TextInput\n            id={'email-message-input'}\n            value={emailMessage}\n            onChange={onEmailMessageUpdateHandle}\n            variant={'outlined'}\n            multiline={true}\n            rowsMax={15}\n            rows={5}\n          />\n        </div>\n      </div>\n    </Modal>\n  );\n}\n\nexport default ScheduleQuizModal;\n","/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/AdminPage/Quizes/AddNewQuiz/AddNewQuiz.tsx",[],"/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/AdminPage/Quizes/QuizList/QuizListItem/QuizListItem.tsx",["213"],"import React from 'react';\nimport {useDispatch} from \"react-redux\";\n\nimport {actions, CommonQuizProps} from \"@store/quizSettings\";\nimport { actions as scheduleActions } from \"@store/quizSchedule\";\nimport { makeStyles as makeStylesMt } from '@material-ui/core/styles';\nimport CardActionsMt from '@material-ui/core/CardActions';\nimport CardMt from '@material-ui/core/Card';\nimport CardActionAreaMt from '@material-ui/core/CardActionArea';\nimport CardContentMt from '@material-ui/core/CardContent';\nimport TypographyMt from '@material-ui/core/Typography';\nimport ButtonMt from '@material-ui/core/Button';\n\nimport styles from './QuizListItem.module.scss';\nimport {put} from \"redux-saga/effects\";\n\nconst useStyles = makeStylesMt({\n  root: {\n    width: 190,\n    height: 180\n  }\n});\n\nconst QuizListItem = ({ name, subject, questionsCount, date, id }: CommonQuizProps): JSX.Element => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const onUpdateQuizHandle = (): void => {\n    dispatch(actions.fetchQuiz(id));\n    dispatch(actions.onModalSettingsOpen());\n\n  }\n\n  const onRemoveQuizHandle = (): void => {\n    dispatch(actions.removeQuiz(id));\n  }\n\n  const onQuizScheduleHandle = (): void => {\n    dispatch(actions.fetchQuiz(id));\n    dispatch(scheduleActions.onModalScheduleOpen());\n  }\n\n  return (\n    <CardMt className={`${classes.root} ${styles.container}`}>\n      <CardActionAreaMt onClick={onQuizScheduleHandle}>\n        <CardContentMt>\n          <TypographyMt color=\"textSecondary\" gutterBottom className={styles.dotting}>\n            {date}\n          </TypographyMt>\n          <TypographyMt variant=\"h5\" component=\"h2\" className={styles.dotting}>\n            {name}\n          </TypographyMt>\n          <TypographyMt color=\"textSecondary\" className={styles.dotting}>\n            {subject}\n          </TypographyMt>\n          <TypographyMt variant=\"body2\" component=\"p\">\n            Liczba pytań: {questionsCount}\n          </TypographyMt>\n        </CardContentMt>\n      </CardActionAreaMt>\n      <CardActionsMt className={styles.actionButtons}>\n        <ButtonMt onClick={onUpdateQuizHandle} size=\"small\" color=\"primary\">\n          Modyfikuj\n        </ButtonMt>\n        <ButtonMt onClick={onRemoveQuizHandle} size=\"small\" color=\"primary\">\n          Usuń\n        </ButtonMt>\n      </CardActionsMt>\n    </CardMt>\n  );\n}\n\nexport default QuizListItem;\n","/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/AdminPage/Quizes/ScheduleQuizModal/QuestionsSelectInput/QuestionsSelectInput.tsx",[],"/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/AdminPage/Quizes/ScheduleQuizModal/EmailsInput/EmailsInput.tsx",["214"],"import React, {useEffect, useState} from 'react';\nimport TextInput from \"@components/Inputs/TextInput/TextInput\";\nimport {Chip, Tooltip} from \"@material-ui/core\";\n\nimport styles from './EmailsInput.module.scss';\n\nexport interface EmailInput {\n  onChange: (emails: string[]) => void;\n  value: string[];\n}\n\nconst EmailsInput = ({ onChange, value }: EmailInput): JSX.Element => {\n  const [emailAddresses, setEmailAddresses] = useState<string>('');\n  const [emailAddressesSep, setEmailAddressesSep] = useState<string>(' ');\n\n  useEffect(() => {\n    const addresses = emailAddresses.split(emailAddressesSep || ' ');\n    const notEmptyAddresses = addresses.filter(address => !!address);\n    onChange(notEmptyAddresses);\n  }, [emailAddresses, emailAddressesSep]);\n\n  const onUpdateEmailAddresses = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    setEmailAddresses(event.target.value);\n  }\n\n  const onUpdateEmailAddressesSep = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    setEmailAddressesSep(event.target.value);\n  }\n\n  return (\n    <div>\n      <TextInput\n        id={'email-addresses-input'}\n        value={emailAddresses}\n        placeholder={'Umieść listę adresów email'}\n        onChange={onUpdateEmailAddresses}\n        variant={'outlined'}\n        multiline={true}\n        rowsMax={5}\n        rows={4}\n      />\n      <div className={styles.sepInputDiv}>\n        <span>Separator: </span>\n        <TextInput\n          id={'email-addresses-sep'}\n          value={emailAddressesSep}\n          onChange={onUpdateEmailAddressesSep}\n        />\n      </div>\n      <div className={styles.addressesDiv}>\n        <span>Adresy email biorące udział w quizie: </span>\n        <div className={styles.chips}>\n          {\n            emailAddresses.length\n            ? (value.map((email, index) => (\n                <Tooltip key={index} title={email} aria-label={email}>\n                  <Chip label={email} />\n                </Tooltip>\n              )))\n            : <Chip label={'przykladowy.adres@email.com'} />\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default EmailsInput;\n","/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/AdminPage/Quizes/ScheduleQuizModal/ScheduleQuizHeader/ScheduleQuizHeader.tsx",["215"],"import React from 'react';\n\nimport styles from './ScheduleQuizHeader.module.scss';\n\nexport interface ScheduleQuizHeader {\n  name: string;\n  subject: string;\n}\n\nconst ScheduleQuizHeader = ({ name, subject }: ScheduleQuizHeader): JSX.Element => {\n  return (\n    <h2 className={styles.header}>\n      <p>\n        Planowanie Quizu\n      </p>\n      <p>\n        {name} - {subject}\n      </p>\n    </h2>\n  );\n}\n\nexport default ScheduleQuizHeader;\n","/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/AdminPage/Quizes/QuizSettingsModal/QuizSettingsModal.tsx",[],"/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/AdminPage/Quizes/AddNewQuiz/AddNewQuizButton/CreateQuizButton.tsx",[],"/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/AdminPage/Quizes/QuizSettingsModal/QuestionsInputList/QuestionsInputList.tsx",[],"/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/AdminPage/Components/AppBar/AppBar.tsx",[],"/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/AdminPage/Components/MenuNav/MenuNav.tsx",[],"/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/App.tsx",[],"/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/Game/Game.tsx",["216"],"/Users/mateuszmotyl/Projects/studia/twij-front/src/store/game.ts",[],"/Users/mateuszmotyl/Projects/studia/twij-front/src/sagas/game.ts",[],"/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/Game/Components/Page/Page.tsx",["217"],"import React, {ReactNode, useEffect} from 'react';\nimport {Card} from \"@material-ui/core\";\n\nimport styles from './Page.module.scss';\n\nexport interface PageProps {\n  children: ReactNode;\n}\n\nconst Page = ({ children }: PageProps): JSX.Element => {\n\n  return (\n    <Card className={styles.page}>\n      {children}\n    </Card>\n  );\n}\n\nexport default Page;\n","/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/SpinnerOverlay/SpinnerOverlay.tsx",[],"/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/Game/TheGame/FoundedQuizStatusHandler.tsx",["218"],"/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/Game/TheGame/PendingGame/PendingGame.tsx",["219","220"],"/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/Game/TheGame/AwaitingGame/AwaitingGame.tsx",["221"],"/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/Game/TheGame/DidntStartGame/DidntStartGame.tsx",[],"/Users/mateuszmotyl/Projects/studia/twij-front/src/components/Card/Card.tsx",[],"/Users/mateuszmotyl/Projects/studia/twij-front/src/sagas/quizHistory.ts",[],"/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/AdminPage/QuizHistory/QuizHistory.tsx",["222"],"/Users/mateuszmotyl/Projects/studia/twij-front/src/store/quizHistory.ts",[],"/Users/mateuszmotyl/Projects/studia/twij-front/src/components/Table/Table.tsx",["223","224"],{"ruleId":"225","replacedBy":"226"},{"ruleId":"227","replacedBy":"228"},{"ruleId":"229","severity":1,"message":"230","line":45,"column":6,"nodeType":"231","endLine":45,"endColumn":15,"suggestions":"232"},{"ruleId":"229","severity":1,"message":"233","line":31,"column":6,"nodeType":"231","endLine":31,"endColumn":16,"suggestions":"234"},{"ruleId":"229","severity":1,"message":"235","line":17,"column":6,"nodeType":"231","endLine":17,"endColumn":25,"suggestions":"236"},{"ruleId":"237","severity":1,"message":"238","line":1,"column":29,"nodeType":"239","messageId":"240","endLine":1,"endColumn":37},{"ruleId":"237","severity":1,"message":"241","line":15,"column":9,"nodeType":"239","messageId":"240","endLine":15,"endColumn":12},{"ruleId":"229","severity":1,"message":"233","line":20,"column":6,"nodeType":"231","endLine":20,"endColumn":41,"suggestions":"242"},{"ruleId":"243","severity":1,"message":"244","line":10,"column":7,"nodeType":"239","messageId":"245","endLine":10,"endColumn":25},{"ruleId":"229","severity":1,"message":"246","line":20,"column":6,"nodeType":"231","endLine":20,"endColumn":53,"suggestions":"247"},{"ruleId":"237","severity":1,"message":"248","line":1,"column":27,"nodeType":"239","messageId":"240","endLine":1,"endColumn":36},{"ruleId":"237","severity":1,"message":"249","line":3,"column":8,"nodeType":"239","messageId":"240","endLine":3,"endColumn":14},{"ruleId":"237","severity":1,"message":"250","line":5,"column":18,"nodeType":"239","messageId":"240","endLine":5,"endColumn":38},{"ruleId":"237","severity":1,"message":"251","line":6,"column":26,"nodeType":"239","messageId":"240","endLine":6,"endColumn":37},{"ruleId":"237","severity":1,"message":"250","line":4,"column":9,"nodeType":"239","messageId":"240","endLine":4,"endColumn":29},{"ruleId":"229","severity":1,"message":"235","line":16,"column":6,"nodeType":"231","endLine":16,"endColumn":25,"suggestions":"252"},{"ruleId":"237","severity":1,"message":"253","line":12,"column":8,"nodeType":"239","messageId":"240","endLine":12,"endColumn":18},{"ruleId":"237","severity":1,"message":"254","line":13,"column":8,"nodeType":"239","messageId":"240","endLine":13,"endColumn":13},"no-native-reassign",["255"],"no-negated-in-lhs",["256"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isModalLoading'. Either include it or remove the dependency array.","ArrayExpression",["257"],"React Hook useEffect has a missing dependency: 'onChange'. Either include it or remove the dependency array. If 'onChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["258"],"React Hook useEffect has an unnecessary dependency: 'actions'. Either exclude it or remove the dependency array. Outer scope values like 'actions' aren't valid dependencies because mutating them doesn't re-render the component.",["259"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'put' is defined but never used.",["260"],"@typescript-eslint/no-redeclare","'ScheduleQuizHeader' is already defined.","redeclared","React Hook useEffect has unnecessary dependencies: 'StoreStatuses' and 'actions'. Either exclude them or remove the dependency array. Outer scope values like 'actions' aren't valid dependencies because mutating them doesn't re-render the component.",["261"],"'useEffect' is defined but never used.","'styles' is defined but never used.","'GameResponseStatuses' is defined but never used.","'FormControl' is defined but never used.",["262"],"'Typography' is defined but never used.","'Paper' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"263","fix":"264"},{"desc":"265","fix":"266"},{"desc":"267","fix":"268"},{"desc":"269","fix":"270"},{"desc":"271","fix":"272"},{"desc":"267","fix":"273"},"Update the dependencies array to be: [isModalLoading, loading]",{"range":"274","text":"275"},"Update the dependencies array to be: [onChange, quizItem]",{"range":"276","text":"277"},"Update the dependencies array to be: [dispatch]",{"range":"278","text":"279"},"Update the dependencies array to be: [emailAddresses, emailAddressesSep, onChange]",{"range":"280","text":"281"},"Update the dependencies array to be: [dispatch, storeStatus]",{"range":"282","text":"283"},{"range":"284","text":"279"},[1157,1166],"[isModalLoading, loading]",[905,915],"[onChange, quizItem]",[692,711],"[dispatch]",[719,754],"[emailAddresses, emailAddressesSep, onChange]",[666,713],"[dispatch, storeStatus]",[506,525]]
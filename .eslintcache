[{"/Users/mateuszmotyl/Projects/studia/twij-front/src/index.tsx":"1","/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/App/App.tsx":"2","/Users/mateuszmotyl/Projects/studia/twij-front/src/store/index.ts":"3","/Users/mateuszmotyl/Projects/studia/twij-front/src/sagas/index.ts":"4","/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/Dashboard/Dashboard.tsx":"5","/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/App/AppBar/AppBar.tsx":"6","/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/App/MenuNav/MenuNav.tsx":"7","/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/Routes/Routes.tsx":"8","/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/Routes/PrivateRoute/PrivateRoute.tsx":"9","/Users/mateuszmotyl/Projects/studia/twij-front/src/components/AddElementButton/AddElementButton.tsx":"10","/Users/mateuszmotyl/Projects/studia/twij-front/src/components/Modal/Modal.tsx":"11","/Users/mateuszmotyl/Projects/studia/twij-front/src/components/FormItems/TextInput/TextInput.tsx":"12","/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/Quizes/Quizzes.tsx":"13","/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/Quizes/QuizList/QuizList.tsx":"14","/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/Quizes/AddNewQuiz/AddNewQuiz.tsx":"15","/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/Quizes/QuizList/QuizListItem/QuizListItem.tsx":"16","/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/Quizes/QuizSettingsModal/QuizSettingsModal.tsx":"17","/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/Quizes/AddNewQuiz/AddNewQuizButton/CreateQuizButton.tsx":"18","/Users/mateuszmotyl/Projects/studia/twij-front/src/components/Accordion/Accordion.tsx":"19","/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/Quizes/QuizSettingsModal/QuestionsInputList/QuestionsInputList.tsx":"20","/Users/mateuszmotyl/Projects/studia/twij-front/src/components/QuestionInput/QuestionHeaderInput/QuestionHeaderInput.tsx":"21","/Users/mateuszmotyl/Projects/studia/twij-front/src/components/QuestionInput/QuestionAnswersInput/QuestionAnswersInput.tsx":"22","/Users/mateuszmotyl/Projects/studia/twij-front/src/store/quizSettings.ts":"23","/Users/mateuszmotyl/Projects/studia/twij-front/src/sagas/quizSettings.ts":"24","/Users/mateuszmotyl/Projects/studia/twij-front/src/components/AddElementButton/Button.tsx":"25"},{"size":812,"mtime":1611345781562,"results":"26","hashOfConfig":"27"},{"size":613,"mtime":1612013885063,"results":"28","hashOfConfig":"27"},{"size":555,"mtime":1612605350000,"results":"29","hashOfConfig":"27"},{"size":176,"mtime":1612605380511,"results":"30","hashOfConfig":"27"},{"size":129,"mtime":1611346063518,"results":"31","hashOfConfig":"27"},{"size":507,"mtime":1611341515170,"results":"32","hashOfConfig":"27"},{"size":2024,"mtime":1611936666760,"results":"33","hashOfConfig":"27"},{"size":607,"mtime":1612014824676,"results":"34","hashOfConfig":"27"},{"size":544,"mtime":1611339127685,"results":"35","hashOfConfig":"27"},{"size":572,"mtime":1611355777017,"results":"36","hashOfConfig":"27"},{"size":1573,"mtime":1612471780451,"results":"37","hashOfConfig":"27"},{"size":1186,"mtime":1612475794470,"results":"38","hashOfConfig":"27"},{"size":207,"mtime":1612014824694,"results":"39","hashOfConfig":"27"},{"size":1245,"mtime":1612014824697,"results":"40","hashOfConfig":"27"},{"size":857,"mtime":1612014824702,"results":"41","hashOfConfig":"27"},{"size":1594,"mtime":1611359870270,"results":"42","hashOfConfig":"27"},{"size":1318,"mtime":1612377009046,"results":"43","hashOfConfig":"27"},{"size":561,"mtime":1611358641762,"results":"44","hashOfConfig":"27"},{"size":1371,"mtime":1612614583559,"results":"45","hashOfConfig":"27"},{"size":2040,"mtime":1612610280735,"results":"46","hashOfConfig":"27"},{"size":1076,"mtime":1612609281929,"results":"47","hashOfConfig":"27"},{"size":3692,"mtime":1612614635258,"results":"48","hashOfConfig":"27"},{"size":1879,"mtime":1612610396212,"results":"49","hashOfConfig":"27"},{"size":104,"mtime":1612605271299,"results":"50","hashOfConfig":"27"},{"size":567,"mtime":1612610243841,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"i37gug",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"/Users/mateuszmotyl/Projects/studia/twij-front/src/index.tsx",[],["106","107"],"/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/App/App.tsx",[],"/Users/mateuszmotyl/Projects/studia/twij-front/src/store/index.ts",[],"/Users/mateuszmotyl/Projects/studia/twij-front/src/sagas/index.ts",[],"/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/Dashboard/Dashboard.tsx",[],"/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/App/AppBar/AppBar.tsx",[],"/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/App/MenuNav/MenuNav.tsx",[],"/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/Routes/Routes.tsx",[],"/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/Routes/PrivateRoute/PrivateRoute.tsx",[],"/Users/mateuszmotyl/Projects/studia/twij-front/src/components/AddElementButton/AddElementButton.tsx",[],"/Users/mateuszmotyl/Projects/studia/twij-front/src/components/Modal/Modal.tsx",[],"/Users/mateuszmotyl/Projects/studia/twij-front/src/components/FormItems/TextInput/TextInput.tsx",[],"/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/Quizes/Quizzes.tsx",[],"/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/Quizes/QuizList/QuizList.tsx",["108"],"import React from 'react';\n\nimport { Paper as PaperMt } from \"@material-ui/core\";\n\nimport QuizListItem from \"@domain/Quizes/QuizList/QuizListItem/QuizListItem\";\nimport AddNewQuiz from \"@domain/Quizes/AddNewQuiz/AddNewQuiz\";\n\nimport styles from './QuizList.module.scss';\n\nconst quizList = [\n  {\n    title: 'Html',\n    subject: 'Twij',\n    questions: 15,\n    date: '13.12.22'\n  },\n  {\n    title: 'Html',\n    subject: 'Twij',\n    questions: 15,\n    date: '13.12.22'\n  },\n  {\n    title: 'Html',\n    subject: 'Twij',\n    questions: 15,\n    date: '13.12.22'\n  },\n  {\n    title: 'Html',\n    subject: 'Twij',\n    questions: 15,\n    date: '13.12.22'\n  },\n  {\n    title: 'Html',\n    subject: 'Twij',\n    questions: 15,\n    date: '13.12.22'\n  },\n  {\n    title: 'Html',\n    subject: 'Twij',\n    questions: 15,\n    date: '13.12.22'\n  }\n]\n\nconst QuizList = (): JSX.Element => {\n\n  const onAddNewQuiz = () => {\n\n  }\n\n  return (\n    <div className={styles.quizList}>\n      <AddNewQuiz />\n      {quizList.map((question, index) => (\n        <div className={styles.quizListItem} key={index}>\n          <PaperMt elevation={index}>\n            <QuizListItem {...question} />\n          </PaperMt>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default QuizList;\n","/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/Quizes/AddNewQuiz/AddNewQuiz.tsx",[],"/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/Quizes/QuizList/QuizListItem/QuizListItem.tsx",[],"/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/Quizes/QuizSettingsModal/QuizSettingsModal.tsx",[],"/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/Quizes/AddNewQuiz/AddNewQuizButton/CreateQuizButton.tsx",[],"/Users/mateuszmotyl/Projects/studia/twij-front/src/components/Accordion/Accordion.tsx",[],"/Users/mateuszmotyl/Projects/studia/twij-front/src/domain/Quizes/QuizSettingsModal/QuestionsInputList/QuestionsInputList.tsx",["109"],"import React, {useState} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\n\nimport { actions as QuizSettingsActions, selectors as QuizSettingsSelectors } from '@store/quizSettings';\nimport Accordion from \"@components/Accordion/Accordion\";\nimport QuestionHeaderInput from \"@components/QuestionInput/QuestionHeaderInput/QuestionHeaderInput\";\nimport QuestionInput, {QuestionProps} from \"@components/QuestionInput/QuestionAnswersInput/QuestionAnswersInput\";\n\nimport styles from \"./QuestionsInputList.module.scss\";\nimport Button from '@src/components/AddElementButton/Button';\n\nconst QuestionsInputList = ():JSX.Element => {\n  const dispatch = useDispatch();\n  const questions = useSelector(QuizSettingsSelectors.questions);\n  const points = useSelector(QuizSettingsSelectors.points);\n\n  const onAddQuestion = () => {\n    dispatch(QuizSettingsActions.pushNewQuestion());\n  }\n\n  const onQuestionChange = (newQuestion: QuestionProps, index: number) => {\n    dispatch(QuizSettingsActions.setQuestion({\n      question: newQuestion,\n      index\n    }))\n  }\n\n  const onRemoveChange = (index: number) => {\n    dispatch(QuizSettingsActions.removeQuestion({ index }))\n  }\n\n  return (\n    <div>\n      <div className={styles.addNewQuestionDiv}>\n        <p>\n          Liczba punktów do zdobycia: <b>{points}</b>\n        </p>\n        <Button tooltip={'Dodaj'} onClick={onAddQuestion}>\n          Dodaj nowe pytanie\n        </Button>\n      </div>\n      {\n        questions.map((quest) => {\n          const header = <QuestionHeaderInput onRemove={onRemoveChange} index={quest.index} {...quest.question} />\n          const questionInput = (\n            <QuestionInput\n              questionProps={{...quest.question}}\n              onChange={(newQuestion) => onQuestionChange(newQuestion, quest.index)}\n            />\n          );\n          return (\n            <Accordion\n              summary={header}\n              details={questionInput}\n            />\n          );\n        })\n      }\n    </div>\n  );\n}\n\nexport default QuestionsInputList;\n","/Users/mateuszmotyl/Projects/studia/twij-front/src/components/QuestionInput/QuestionHeaderInput/QuestionHeaderInput.tsx",[],"/Users/mateuszmotyl/Projects/studia/twij-front/src/components/QuestionInput/QuestionAnswersInput/QuestionAnswersInput.tsx",["110"],"import React, {useEffect, useState} from 'react';\nimport {FormControlLabel, InputAdornment, Radio, RadioGroup, Slider} from \"@material-ui/core\";\nimport TextInput from \"@components/FormItems/TextInput/TextInput\";\n\nimport styles from './QuestionAnswersInput.module.scss';\n\nexport interface QuestionProps {\n  question: string;\n  answerA: string;\n  answerB: string;\n  answerC: string;\n  answerD: string;\n  answer: number;\n  points: number;\n}\n\nexport interface QuestionInputProps {\n  onChange?: (newQuestion: QuestionProps) => void;\n  questionProps: QuestionProps;\n}\n\nconst QuestionAnswersInput = ({ onChange, questionProps }: QuestionInputProps): JSX.Element => {\n  const [quizItem, setQuizItem] = useState<QuestionProps>(questionProps);\n\n  useEffect(() => {\n    if (!onChange) {\n      return;\n    }\n    onChange(quizItem);\n  }, [quizItem]);\n\n  const answersArray = [quizItem.answerA, quizItem.answerB, quizItem.answerC, quizItem.answerD];\n  const answersLabels = ['A', 'B', 'C', 'D'];\n\n  const handleQuestionChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuizItem({\n      ...quizItem,\n      question: event.target.value\n    });\n  }\n\n  const handleProperAnswerChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuizItem({\n      ...quizItem,\n      answer: Number(event.target.value)\n    });\n  }\n\n  const handleAnswerChange = (event: React.ChangeEvent<HTMLInputElement>, answer: string) => {\n    if (!quizItem.hasOwnProperty(answer)) {\n      return;\n    }\n    setQuizItem({\n      ...quizItem,\n      [answer]: event.target.value\n    });\n  }\n\n  const handlePointsChange = (_: any, value: (number | number[])) => {\n    if (typeof value !== 'number') {\n      return;\n    }\n    setQuizItem({\n      ...quizItem,\n      points: value\n    });\n  }\n\n  return (\n    <div className={styles.questionInputContainer}>\n      <TextInput\n        className={styles.question}\n        value={quizItem.question}\n        onChange={handleQuestionChange}\n        id={'Question'}\n        label={'Question'}\n        variant={'outlined'}\n        multiline={true}\n        rowsMax={4}\n        rows={3}\n      />\n      <RadioGroup aria-label='quiz' name='quiz' value={quizItem.answer} onChange={handleProperAnswerChange} className={styles.answers}>\n        {\n          answersArray.map((answer, index) => {\n            const prop = `answer${answersLabels[index]}`;\n            const answerInput = (\n              <TextInput\n                value={answer}\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => handleAnswerChange(event, prop)}\n                id={index.toString()}\n                className={styles.questionInput}\n                inputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      {answersLabels[index]}\n                    </InputAdornment>\n                  )\n                }}\n              />\n            )\n            return (\n              <FormControlLabel\n                className={styles.answerOption}\n                value={index}\n                control={<Radio />}\n                label={answerInput}\n              />\n            )\n          })\n        }\n      </RadioGroup>\n      <div>\n        <p>Liczba punktów za poprawną odpowiedź:</p>\n        <Slider\n          value={quizItem.points}\n          onChange={handlePointsChange}\n          defaultValue={1}\n          aria-labelledby=\"discrete-slider\"\n          valueLabelDisplay=\"auto\"\n          style={{\n            width: 200,\n            marginLeft: 20\n          }}\n          step={1}\n          marks\n          min={0}\n          max={10}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default QuestionAnswersInput;\n","/Users/mateuszmotyl/Projects/studia/twij-front/src/store/quizSettings.ts",[],"/Users/mateuszmotyl/Projects/studia/twij-front/src/sagas/quizSettings.ts",[],"/Users/mateuszmotyl/Projects/studia/twij-front/src/components/AddElementButton/Button.tsx",[],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":51,"column":9,"nodeType":"117","messageId":"118","endLine":51,"endColumn":21},{"ruleId":"115","severity":1,"message":"119","line":1,"column":16,"nodeType":"117","messageId":"118","endLine":1,"endColumn":24},{"ruleId":"120","severity":1,"message":"121","line":30,"column":6,"nodeType":"122","endLine":30,"endColumn":16,"suggestions":"123"},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"@typescript-eslint/no-unused-vars","'onAddNewQuiz' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'onChange'. Either include it or remove the dependency array. If 'onChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["126"],"no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},"Update the dependencies array to be: [onChange, quizItem]",{"range":"129","text":"130"},[825,835],"[onChange, quizItem]"]